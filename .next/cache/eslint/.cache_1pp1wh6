[{"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/404.js":"1","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/_app.js":"2","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/_document.js":"3","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/about.js":"4","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/dashboard.js":"5","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/login.js":"6","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/register.js":"7","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/login.js":"8","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/logout.js":"9","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/register.js":"10","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/user.js":"11","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/[slug].js":"12","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/add.js":"13","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/edit/[id].js":"14","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/index.js":"15","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/search.js":"16","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/index.js":"17","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/DashboardEvent.js":"18","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/EventMap.js":"19","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Eventitem.js":"20","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Footer.js":"21","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Header.js":"22","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/ImageUpload.js":"23","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Layout.js":"24","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Modal.js":"25","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Pagination.js":"26","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Search.js":"27","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Showcase.js":"28"},{"size":491,"mtime":1651814544096,"results":"29","hashOfConfig":"30"},{"size":232,"mtime":1654738375632,"results":"31","hashOfConfig":"30"},{"size":256,"mtime":1654451159828,"results":"32","hashOfConfig":"30"},{"size":180,"mtime":1651814500129,"results":"33","hashOfConfig":"30"},{"size":2235,"mtime":1655776670956,"results":"34","hashOfConfig":"30"},{"size":1738,"mtime":1655777309002,"results":"35","hashOfConfig":"30"},{"size":2413,"mtime":1654989162224,"results":"36","hashOfConfig":"30"},{"size":1106,"mtime":1654989012184,"results":"37","hashOfConfig":"30"},{"size":586,"mtime":1654987410216,"results":"38","hashOfConfig":"30"},{"size":1111,"mtime":1654989019637,"results":"39","hashOfConfig":"30"},{"size":819,"mtime":1655300329722,"results":"40","hashOfConfig":"30"},{"size":2405,"mtime":1655776996404,"results":"41","hashOfConfig":"30"},{"size":4193,"mtime":1655475709120,"results":"42","hashOfConfig":"30"},{"size":5614,"mtime":1655476756653,"results":"43","hashOfConfig":"30"},{"size":1111,"mtime":1655602553600,"results":"44","hashOfConfig":"30"},{"size":1375,"mtime":1654057989608,"results":"45","hashOfConfig":"30"},{"size":944,"mtime":1652970180853,"results":"46","hashOfConfig":"30"},{"size":768,"mtime":1655340126564,"results":"47","hashOfConfig":"30"},{"size":1194,"mtime":1655601244948,"results":"48","hashOfConfig":"30"},{"size":831,"mtime":1654207711944,"results":"49","hashOfConfig":"30"},{"size":322,"mtime":1655602467272,"results":"50","hashOfConfig":"30"},{"size":1801,"mtime":1654739650892,"results":"51","hashOfConfig":"30"},{"size":1335,"mtime":1655476821258,"results":"52","hashOfConfig":"30"},{"size":824,"mtime":1651815204351,"results":"53","hashOfConfig":"30"},{"size":1050,"mtime":1654451934391,"results":"54","hashOfConfig":"30"},{"size":425,"mtime":1654486434383,"results":"55","hashOfConfig":"30"},{"size":596,"mtime":1654058841757,"results":"56","hashOfConfig":"30"},{"size":244,"mtime":1651815061101,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14kld88",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/404.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/_app.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/_document.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/about.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/dashboard.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/login.js",["151"],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/account/register.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/login.js",["152"],[],"\nimport cookie from 'cookie'\nimport { API_URL } from '@/config/index'\n\nexport default async (req, res) => {\n  if (req.method === 'POST') {\n    const { identifier, password } = req.body\n\n    const strapiRes = await fetch(`${API_URL}/auth/local`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        identifier,\n        password,\n      }),\n    })\n\n    const data = await strapiRes.json()\n    console.log(data)\n    if (strapiRes.ok) {\n      // Set Cookie\n      res.setHeader(\n        'Set-Cookie',\n        cookie.serialize('token', data.jwt, {\n          httpOnly: true,\n          secure: process.env.NODE_ENV !== 'development',\n          maxAge: 60 * 60 * 24 * 7, // 1 week\n          sameSite: 'strict',\n          path: '/',\n        })\n      )\n\n      res.status(200).json({ user: data.user })\n    } else {\n      res\n        .status(data.error.status)\n        .json({ message: data.error.message })\n    }\n  } else {\n    res.setHeader('Allow', ['POST'])\n    res.status(405).json({ message: `Method ${req.method} not allowed` })\n  }\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/logout.js",["153"],[],"import cookie from 'cookie'\nimport { API_URL } from '@/config/index'\n\nexport default async (req, res) => {\n  if (req.method === 'POST') {\n    // Destroy cookie\n    res.setHeader(\n      'Set-Cookie',\n      cookie.serialize('token', '', {\n        httpOnly: true,\n        secure: process.env.NODE_ENV !== 'development',\n        expires: new Date(0),\n        sameSite: 'strict',\n        path: '/',\n      })\n    )\n\n    res.status(200).json({ message: 'Success' })\n  } else {\n    res.setHeader('Allow', ['POST'])\n    res.status(405).json({ message: `Method ${req.method} not allowed` })\n  }\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/register.js",["154"],[],"import cookie from 'cookie'\nimport { API_URL } from '@/config/index'\n\nexport default async (req, res) => {\n  if (req.method === 'POST') {\n    const { username, email, password } = req.body\n\n    const strapiRes = await fetch(`${API_URL}/auth/local/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n      }),\n    })\n\n    const data = await strapiRes.json()\n\n    if (strapiRes.ok) {\n      // Set Cookie\n      res.setHeader(\n        'Set-Cookie',\n        cookie.serialize('token', data.jwt, {\n          httpOnly: true,\n          secure: process.env.NODE_ENV !== 'development',\n          maxAge: 60 * 60 * 24 * 7, // 1 week\n          sameSite: 'strict',\n          path: '/',\n        })\n      )\n\n      res.status(200).json({ user: data.user })\n    } else {\n      res\n        .status(data.error.status)\n        .json({ message: data.error.message })\n    }\n  } else {\n    res.setHeader('Allow', ['POST'])\n    res.status(405).json({ message: `Method ${req.method} not allowed` })\n  }\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/api/user.js",["155"],[],"import cookie from 'cookie'\nimport { API_URL } from '@/config/index'\n\nexport default async (req, res) => {\n  if (req.method === 'GET') {\n    //console.log(req.headers)\n    if (!req.headers.cookie) {\n      res.status(403).json({ message: 'Not Authorized' })\n      return\n    }\n\n    const { token } = cookie.parse(req.headers.cookie)\n    //console.log(token)\n\n    const strapiRes = await fetch(`${API_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    const user = await strapiRes.json()\n\n    if (strapiRes.ok) {\n      res.status(200).json({ user })\n    } else {\n      res.status(403).json({ message: 'User forbidden' })\n    }\n  } else {\n    res.setHeader('Allow', ['GET'])\n    res.status(405).json({ message: `Method ${req.method} not allowed` })\n  }\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/[slug].js",["156"],[],"const qs = require('qs')\nimport {FaPencilAlt, FaTimes} from 'react-icons/fa'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Link from 'next/Link'\nimport Image from 'next/image'\nimport Layout from '@/components/Layout'\nimport EventMap from '@/components/EventMap'\nimport {API_URL} from '@/config/index'\nimport styles from '@/styles/Event.module.css'\nimport { useRouter } from 'next/router';\n\n\nfunction EventPage({evt}) {\n    const router = useRouter()\n   \n    return (\n        <Layout>\n            <div className={styles.event}>\n                {/* <div className={styles.controls}>\n                    <Link href={`/events/edit/${evt.id}`}>\n                        <a>\n                            <FaPencilAlt /> Edit Event\n                        </a>\n                    </Link>\n                    <a href='#' className={styles.delete} onClick={deleteEvent}>\n                        <FaTimes /> Delete Event\n                    </a>\n\n                </div> */}\n                <span>\n                    {new Date(evt.attributes.date).toLocaleDateString('en-US')} at {evt.attributes.time}\n                </span>\n                <h1>{evt.attributes.name}</h1>\n                <ToastContainer/>\n                {evt.attributes.image.data && (\n                <div className={styles.image}>\n                    <Image src={evt.attributes.image.data.attributes.url} width={960} height={600}/>\n                </div>\n                )}\n                <h3>Performers:</h3>\n                <p>{evt.attributes.performers}</p>\n                <h3>Description:</h3>\n                <p>{evt.attributes.description}</p>\n                <h3>Venue: {evt.attributes.venue}</h3>\n                <p>{evt.attributes.address}</p>\n                <EventMap evt={evt}/>\n\n                <Link href='/events'>\n                    <a className={styles.back}>{'<'}Go Back</a>\n                </Link>\n            </div>\n        </Layout>\n    )\n}\n\nexport default EventPage\n\n\nexport async function getServerSideProps({query:{slug}}){\n    const query = qs.stringify({\n        populate: '*',\n        filters: {\n            slug: {\n                $eq: slug\n            },\n        },\n    })\n    const res = await fetch(`${API_URL}/events?${query}`)\n    const events = await res.json()\n\n    return {\n        props: {\n            evt: events.data[0]\n        },\n    }\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/add.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/edit/[id].js",["157"],[],"import { parseCookies } from '@/helpers/index';\nimport { FaImage } from 'react-icons/fa'\nimport Image from 'next/image';\nimport moment from 'moment'\nimport { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Link from 'next/Link'\nimport Layout from '@/components/Layout'\nimport Modal from '@/components/Modal'\nimport ImageUpload from '@/components/ImageUpload'\nimport {API_URL} from '@/config/index'\nimport styles from '@/styles/Form.module.css'\n\nvar slugify = require('slugify')\n\nfunction EditEventPage({evt, token}) {\n  //console.log(evt.attributes)\n  const [values, setValues] = useState({\n    name: evt.attributes.name,\n    slug: slugify(evt.attributes.name).toLowerCase(),\n    performers: evt.attributes.performers,\n    venue: evt.attributes.venue,\n    address: evt.attributes.address,\n    date: evt.attributes.date,\n    time: evt.attributes.time,\n    description: evt.attributes.description,\n  })\n  const [imagePreview, setImagePreview] = useState(\n    evt.attributes.image.data ? evt.attributes.image.data.attributes.url : null\n  )\n  const [showModal, setShowModal] = useState(false)\n\n  const router = useRouter()\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    values.slug = slugify(values.name.toLowerCase())\n    //Validation\n    const hasEmptyFields = Object.values(values).some((element) => element === '')\n\n    if(hasEmptyFields){\n      toast.error('Please fill in all fields')\n    }\n    \n\n    const res = await fetch(`${API_URL}/events/${evt.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`, \n      },\n      body: JSON.stringify({data:values}),\n    });\n\n    if(!res.ok){\n      if (res.status === 403 || res.status === 401) {\n        toast.error('Unauthorized')\n        return\n      }\n      toast.error('Something went wrong')\n    }else{\n      const evt = await res.json()\n      router.push(`/events/${evt.data.attributes.slug}`)\n    }\n  }\n  const handleInputChange = (e) => {\n    const {name, value}= e.target\n    setValues({...values, [name]: value})\n  }\n  const imageUploaded = async (e) =>{\n    const res = await fetch(`${API_URL}/events/${evt.id}?populate=%2A`)\n    const data = await res.json()\n    //console.log(await data)\n\n    setImagePreview(data.data.attributes.image.data.attributes.url)\n    setShowModal(false)\n  }\n\n\n  return (\n    <Layout title='Edit Event'>\n      <Link href='/events'>Go Back</Link>\n        <h1>Edit Event</h1>\n        <ToastContainer />\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <div className={styles.grid}>\n            <div>\n              <label htmlFor=\"name\">Event Name</label>\n              <input type=\"text\" id=\"name\" name=\"name\" value={values.name} onChange={handleInputChange}/>\n            </div>\n            <div>\n            <label htmlFor='performers'>Performers</label>\n            <input\n              type='text'\n              name='performers'\n              id='performers'\n              value={values.performers}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='venue'>Venue</label>\n            <input\n              type='text'\n              name='venue'\n              id='venue'\n              value={values.venue}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='address'>Address</label>\n            <input\n              type='text'\n              name='address'\n              id='address'\n              value={values.address}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='date'>Date</label>\n            <input\n              type='date'\n              name='date'\n              id='date'\n              value={moment(values.date).format('yyyy-MM-DD')}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='time'>Time</label>\n            <input\n              type='text'\n              name='time'\n              id='time'\n              value={values.time}\n              onChange={handleInputChange}\n            />\n          </div>\n          </div>\n          <div>\n          <label htmlFor='description'>Event Description</label>\n          <textarea\n            type='text'\n            name='description'\n            id='description'\n            value={values.description}\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n        <input type='submit' value=\"Update Event\" className='btn'/>\n        </form>\n        <h2>Event Image</h2>\n        {imagePreview ? (\n          <Image src={imagePreview} height={100} width={170}/>\n        ) : <div>\n          <p>No image uploaded</p>\n          </div>}\n        <div>\n          <button onClick={() => setShowModal(true)} className='btn-secondary'>\n            <FaImage/> Set Image\n          </button>\n          <Modal show={showModal} onClose={() => setShowModal(false)}>\n            <ImageUpload evtId={evt.id} imageUploaded={imageUploaded} token={token}/>\n          </Modal>\n        </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps({params: {id}, req}) {\n  const {token} = parseCookies(req)\n\n  const res = await fetch(`${API_URL}/events/${id}?populate=%2A`)\n  const evt = await res.json()\n  //console.log(req.headers.cookie)\n  return {\n    props: {\n      evt: evt.data,\n      token\n    }\n  }\n}\n\nexport default EditEventPage","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/index.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/events/search.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/pages/index.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/DashboardEvent.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/EventMap.js",["158"],[],"import Image from 'next/image'\nimport { useState, useEffect } from 'react'\nimport Map, { Marker } from 'react-map-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport Geocode from 'react-geocode'\n\nexport default function EventMap({ evt }) {\n  const [lat, setLat] = useState(null)\n  const [lng, setLng] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get latitude & longitude from address.\n    Geocode.fromAddress(evt.attributes.address).then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location\n        setLat(lat)\n        setLng(lng)\n        setLoading(false)\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }, [])\n\n  Geocode.setApiKey(process.env.NEXT_PUBLIC_GOOGLE_MAP_API_KEY)\n\n  if (loading) return false\n\n  return (\n    <Map\n        initialViewState={{\n          latitude: lat,\n          longitude: lng,\n          zoom: 14\n        }}\n        style={{width: 800, height: 600}}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxAccessToken={process.env.NEXT_PUBLIC_MAPBOX_API_TOKEN}\n      >\n        <Marker longitude={lng} latitude={lat} color=\"red\" />\n      </Map>\n  )\n}","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Eventitem.js",["159"],[],"import Link from 'next/Link'\nimport Image from 'next/image'\nimport styles from '@/styles/Eventitem.module.css'\n\n\nfunction Eventitem({evt}) {\n  return (\n    <div className={styles.event}>\n        <div className={styles.img}>\n            <Image \n            src={evt.image.data ? evt.image.data.attributes.url : '/images/event-default.png'}\n            width={170}\n            height={100}\n            />\n        </div>\n        <div className={styles.info}>\n            <span>\n                {new Date(evt.date).toLocaleDateString('en-US')} at {evt.time}\n            </span>\n            <h3>{evt.name}</h3>\n        </div>\n        <div className={styles.link}>\n            <Link href={`/events/${evt.slug}`}>\n                <a className='btn'>Details</a>\n            </Link>\n        </div>\n    </div>\n  )\n}\n\nexport default Eventitem","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Footer.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Header.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/ImageUpload.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Layout.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Modal.js",["160"],[],"import {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport { FaTimes } from 'react-icons/fa'\nimport styles from \"@/styles/Modal.module.css\"\n\n\nfunction Modal({show, onClose, children, title}) {\n  const [isBrowser, setIsBrowser] = useState(false)\n\n    useEffect(() => setIsBrowser(true))\n\n    const handleClose = (e) => {\n        e.preventDefault()\n        onClose()\n    }\n\n    const modalContent = show ? (\n        <div className={styles.overlay}>\n            <div className={styles.modal}>\n                <div className={styles.header}>\n                    <a href=\"#\" onClick={handleClose}>\n                        <FaTimes/>\n                    </a>\n                </div>\n                {title && <div>{title}</div>}\n                <div className={styles.body}>{children}</div>\n            </div>\n        </div>\n    ) : null\n        if(isBrowser){\n            return ReactDOM.createPortal(modalContent, document.getElementById('modal-root'))\n        } else {\n            return null\n        }\n    \n}\n\nexport default Modal","/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Pagination.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Search.js",[],[],"/Users/jaronsander/Desktop/WebDev/Next/djEvent/dj-events-frontend/components/Showcase.js",[],[],{"ruleId":"161","severity":1,"message":"162","line":21,"column":8,"nodeType":"163","endLine":21,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":1,"nodeType":"167","endLine":45,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":4,"column":1,"nodeType":"167","endLine":23,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":4,"column":1,"nodeType":"167","endLine":45,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":4,"column":1,"nodeType":"167","endLine":33,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":38,"column":21,"nodeType":"170","endLine":38,"endColumn":101},{"ruleId":"168","severity":1,"message":"169","line":158,"column":11,"nodeType":"170","endLine":158,"endColumn":63},{"ruleId":"161","severity":1,"message":"171","line":25,"column":6,"nodeType":"163","endLine":25,"endColumn":8,"suggestions":"172"},{"ruleId":"168","severity":1,"message":"169","line":10,"column":13,"nodeType":"170","endLine":14,"endColumn":15},{"ruleId":"161","severity":1,"message":"173","line":10,"column":5,"nodeType":"174","endLine":10,"endColumn":14,"suggestions":"175"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.","ArrayExpression",["176"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'evt.attributes.address'. Either include it or remove the dependency array.",["177"],"React Hook useEffect contains a call to 'setIsBrowser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["178"],{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [error]",{"range":"185","text":"186"},"Update the dependencies array to be: [evt.attributes.address]",{"range":"187","text":"188"},"Add dependencies array: []",{"range":"189","text":"190"},[662,664],"[error]",[714,716],"[evt.attributes.address]",[307,307],", []"]